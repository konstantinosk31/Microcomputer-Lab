
Ex6_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004a2  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000004a2  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  000004d1  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000004df  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012ce  00000000  00000000  00000577  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000afb  00000000  00000000  00001845  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006d7  00000000  00000000  00002340  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00002a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000351  00000000  00000000  00002b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000066b  00000000  00000000  00002ec9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003534  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000400  00000400  00000494  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000035bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.twi_init 0000000c  000003ee  000003ee  00000482  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.twi_readNak 00000014  000003ca  000003ca  0000045e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.twi_start 0000004c  00000268  00000268  000002fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.twi_start_wait 0000004e  0000021a  0000021a  000002ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.twi_write 00000024  00000390  00000390  00000424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.twi_rep_start 00000006  000003fa  000003fa  0000048e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.twi_stop 00000010  000003de  000003de  00000472  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.PCA9555_0_write 00000028  0000031a  0000031a  000003ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.PCA9555_0_read 00000026  0000036a  0000036a  000003fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.scan_row 00000032  000002e8  000002e8  0000037c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.scan_keypad 00000066  000001b4  000001b4  00000248  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.keypad_to_ascii 000000a6  0000010e  0000010e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.char_to_led 00000034  000002b4  000002b4  00000348  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.main    00000028  00000342  00000342  000003d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_fini 00000002  00000408  00000408  0000049c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__dummy_funcs_on_exit 00000002  0000040a  0000040a  0000049e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_simulator_exit 00000002  0000040c  0000040c  000004a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.exit    00000016  000003b4  000003b4  00000448  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._Exit   00000004  00000404  00000404  00000498  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
   8:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
   c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  10:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  14:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  18:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  1c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  20:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  24:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  28:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  2c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  30:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  34:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  38:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  3c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  40:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  44:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  48:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  4c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  50:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  54:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  58:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  5c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  60:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  64:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  68:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  6c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  70:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  74:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  78:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  7c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  80:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  84:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  88:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  8c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  90:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  94:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  98:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  9c:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  a0:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  a4:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  a8:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  ac:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
  b0:	0c 94 00 02 	jmp	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>

000000b4 <.dinit>:
  b4:	01 00       	.word	0x0001	; ????
  b6:	01 01       	movw	r0, r2
  b8:	80 00       	.word	0x0080	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	e4 eb       	ldi	r30, 0xB4	; 180
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	17 c0       	rjmp	.+46     	; 0xfc <__do_clear_bss+0x8>
  ce:	b5 91       	lpm	r27, Z+
  d0:	a5 91       	lpm	r26, Z+
  d2:	35 91       	lpm	r19, Z+
  d4:	25 91       	lpm	r18, Z+
  d6:	05 91       	lpm	r16, Z+
  d8:	07 fd       	sbrc	r16, 7
  da:	0c c0       	rjmp	.+24     	; 0xf4 <__do_clear_bss>
  dc:	95 91       	lpm	r25, Z+
  de:	85 91       	lpm	r24, Z+
  e0:	ef 01       	movw	r28, r30
  e2:	f9 2f       	mov	r31, r25
  e4:	e8 2f       	mov	r30, r24
  e6:	05 90       	lpm	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	a2 17       	cp	r26, r18
  ec:	b3 07       	cpc	r27, r19
  ee:	d9 f7       	brne	.-10     	; 0xe6 <__do_copy_data+0x20>
  f0:	fe 01       	movw	r30, r28
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_clear_bss+0x8>

000000f4 <__do_clear_bss>:
  f4:	1d 92       	st	X+, r1
  f6:	a2 17       	cp	r26, r18
  f8:	b3 07       	cpc	r27, r19
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__do_clear_bss>
  fc:	e9 3b       	cpi	r30, 0xB9	; 185
  fe:	f4 07       	cpc	r31, r20
 100:	31 f7       	brne	.-52     	; 0xce <__do_copy_data+0x8>
 102:	0e 94 a1 01 	call	0x342	; 0x342 <main>
 106:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <exit>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>

Disassembly of section .text:

00000400 <__bad_interrupt>:
 400:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.twi_init:

000003ee <twi_init>:
#define TW_STATUS (TWSR0 & TW_STATUS_MASK)

//initialize TWI clock
void twi_init(void)
{
	TWSR0 = 0; // PRESCALER_VALUE=1
 3ee:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = TWBR0_VALUE; // SCL_CLOCK 100KHz
 3f2:	88 e4       	ldi	r24, 0x48	; 72
 3f4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 3f8:	08 95       	ret

Disassembly of section .text.twi_readNak:

000003ca <twi_readNak>:
}

//Read one byte from the twi device, read is followed by a stop condition
unsigned char twi_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 3ca:	84 e8       	ldi	r24, 0x84	; 132
 3cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR0 & (1<<TWINT)));
 3d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3d4:	88 23       	and	r24, r24
 3d6:	e4 f7       	brge	.-8      	; 0x3d0 <twi_readNak+0x6>
	return TWDR0;
 3d8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 3dc:	08 95       	ret

Disassembly of section .text.twi_start:

00000268 <twi_start>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 268:	94 ea       	ldi	r25, 0xA4	; 164
 26a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 26e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 272:	99 23       	and	r25, r25
 274:	e4 f7       	brge	.-8      	; 0x26e <twi_start+0x6>
 276:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 27a:	98 7f       	andi	r25, 0xF8	; 248
 27c:	98 30       	cpi	r25, 0x08	; 8
 27e:	11 f0       	breq	.+4      	; 0x284 <twi_start+0x1c>
 280:	90 31       	cpi	r25, 0x10	; 16
 282:	91 f4       	brne	.+36     	; 0x2a8 <twi_start+0x40>
 284:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 288:	84 e8       	ldi	r24, 0x84	; 132
 28a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 28e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 292:	88 23       	and	r24, r24
 294:	e4 f7       	brge	.-8      	; 0x28e <twi_start+0x26>
 296:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 29a:	88 7f       	andi	r24, 0xF8	; 248
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	31 f0       	breq	.+12     	; 0x2ac <twi_start+0x44>
 2a0:	80 34       	cpi	r24, 0x40	; 64
 2a2:	31 f4       	brne	.+12     	; 0x2b0 <twi_start+0x48>
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	08 95       	ret
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	08 95       	ret
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	08 95       	ret
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	08 95       	ret

Disassembly of section .text.twi_start_wait:

0000021a <twi_start_wait>:
 21a:	94 ea       	ldi	r25, 0xA4	; 164
 21c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 220:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 224:	99 23       	and	r25, r25
 226:	e4 f7       	brge	.-8      	; 0x220 <twi_start_wait+0x6>
 228:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 22c:	98 7f       	andi	r25, 0xF8	; 248
 22e:	98 30       	cpi	r25, 0x08	; 8
 230:	11 f0       	breq	.+4      	; 0x236 <twi_start_wait+0x1c>
 232:	90 31       	cpi	r25, 0x10	; 16
 234:	91 f7       	brne	.-28     	; 0x21a <twi_start_wait>
 236:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 23a:	94 e8       	ldi	r25, 0x84	; 132
 23c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 240:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 244:	99 23       	and	r25, r25
 246:	e4 f7       	brge	.-8      	; 0x240 <twi_start_wait+0x26>
 248:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 24c:	98 7f       	andi	r25, 0xF8	; 248
 24e:	90 32       	cpi	r25, 0x20	; 32
 250:	11 f0       	breq	.+4      	; 0x256 <twi_start_wait+0x3c>
 252:	98 35       	cpi	r25, 0x58	; 88
 254:	41 f4       	brne	.+16     	; 0x266 <twi_start_wait+0x4c>
 256:	94 e9       	ldi	r25, 0x94	; 148
 258:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 25c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 260:	94 fd       	sbrc	r25, 4
 262:	fc cf       	rjmp	.-8      	; 0x25c <twi_start_wait+0x42>
 264:	da cf       	rjmp	.-76     	; 0x21a <twi_start_wait>
 266:	08 95       	ret

Disassembly of section .text.twi_write:

00000390 <twi_write>:
 390:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 394:	84 e8       	ldi	r24, 0x84	; 132
 396:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 39a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 39e:	88 23       	and	r24, r24
 3a0:	e4 f7       	brge	.-8      	; 0x39a <twi_write+0xa>
 3a2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 3a6:	88 7f       	andi	r24, 0xF8	; 248
 3a8:	88 32       	cpi	r24, 0x28	; 40
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <twi_write+0x20>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	08 95       	ret
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	08 95       	ret

Disassembly of section .text.twi_rep_start:

000003fa <twi_rep_start>:
// Send repeated start condition, address, transfer direction
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
 3fa:	0e 94 34 01 	call	0x268	; 0x268 <twi_start>
}
 3fe:	08 95       	ret

Disassembly of section .text.twi_stop:

000003de <twi_stop>:

// Terminates the data transfer and releases the twi bus
void twi_stop(void)
{
	// send stop condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 3de:	84 e9       	ldi	r24, 0x94	; 148
 3e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
 3e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3e8:	84 fd       	sbrc	r24, 4
 3ea:	fc cf       	rjmp	.-8      	; 0x3e4 <twi_stop+0x6>
}
 3ec:	08 95       	ret

Disassembly of section .text.PCA9555_0_write:

0000031a <PCA9555_0_write>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	d8 2f       	mov	r29, r24
 320:	c6 2f       	mov	r28, r22
 322:	80 e4       	ldi	r24, 0x40	; 64
 324:	0e 94 0d 01 	call	0x21a	; 0x21a <twi_start_wait>
 328:	8d 2f       	mov	r24, r29
 32a:	0e 94 c8 01 	call	0x390	; 0x390 <twi_write>
 32e:	8c 2f       	mov	r24, r28
 330:	0e 94 c8 01 	call	0x390	; 0x390 <twi_write>
 334:	0e 94 ef 01 	call	0x3de	; 0x3de <twi_stop>
 338:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__DATA_REGION_ORIGIN__>
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

Disassembly of section .text.PCA9555_0_read:

0000036a <PCA9555_0_read>:
 36a:	cf 93       	push	r28
 36c:	c8 2f       	mov	r28, r24
 36e:	80 e4       	ldi	r24, 0x40	; 64
 370:	0e 94 0d 01 	call	0x21a	; 0x21a <twi_start_wait>
 374:	8c 2f       	mov	r24, r28
 376:	0e 94 c8 01 	call	0x390	; 0x390 <twi_write>
 37a:	81 e4       	ldi	r24, 0x41	; 65
 37c:	0e 94 fd 01 	call	0x3fa	; 0x3fa <twi_rep_start>
 380:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_readNak>
 384:	c8 2f       	mov	r28, r24
 386:	0e 94 ef 01 	call	0x3de	; 0x3de <twi_stop>
 38a:	8c 2f       	mov	r24, r28
 38c:	cf 91       	pop	r28
 38e:	08 95       	ret

Disassembly of section .text.scan_row:

000002e8 <scan_row>:
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <scan_row+0xa>
 2ee:	66 0f       	add	r22, r22
 2f0:	77 1f       	adc	r23, r23
 2f2:	8a 95       	dec	r24
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <scan_row+0x6>
 2f6:	60 95       	com	r22
 2f8:	6f 70       	andi	r22, 0x0F	; 15
 2fa:	83 e0       	ldi	r24, 0x03	; 3
 2fc:	0e 94 8d 01 	call	0x31a	; 0x31a <PCA9555_0_write>
 300:	8f e8       	ldi	r24, 0x8F	; 143
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <scan_row+0x1c>
 308:	00 c0       	rjmp	.+0      	; 0x30a <scan_row+0x22>
 30a:	00 00       	nop
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	0e 94 b5 01 	call	0x36a	; 0x36a <PCA9555_0_read>
 312:	80 95       	com	r24
 314:	82 95       	swap	r24
 316:	8f 70       	andi	r24, 0x0F	; 15
 318:	08 95       	ret

Disassembly of section .text.scan_keypad:

000001b4 <scan_keypad>:
 1b4:	ef 92       	push	r14
 1b6:	ff 92       	push	r15
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	0e 94 74 01 	call	0x2e8	; 0x2e8 <scan_row>
 1c6:	e8 2e       	mov	r14, r24
 1c8:	f1 2c       	mov	r15, r1
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	0e 94 74 01 	call	0x2e8	; 0x2e8 <scan_row>
 1d0:	08 2f       	mov	r16, r24
 1d2:	10 e0       	ldi	r17, 0x00	; 0
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <scan_row>
 1da:	c8 2f       	mov	r28, r24
 1dc:	d0 e0       	ldi	r29, 0x00	; 0
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	0e 94 74 01 	call	0x2e8	; 0x2e8 <scan_row>
 1e4:	28 2f       	mov	r18, r24
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	02 95       	swap	r16
 1ea:	12 95       	swap	r17
 1ec:	10 7f       	andi	r17, 0xF0	; 240
 1ee:	10 27       	eor	r17, r16
 1f0:	00 7f       	andi	r16, 0xF0	; 240
 1f2:	10 27       	eor	r17, r16
 1f4:	0e 29       	or	r16, r14
 1f6:	1f 29       	or	r17, r15
 1f8:	9c 2f       	mov	r25, r28
 1fa:	88 27       	eor	r24, r24
 1fc:	80 2b       	or	r24, r16
 1fe:	91 2b       	or	r25, r17
 200:	32 2f       	mov	r19, r18
 202:	22 27       	eor	r18, r18
 204:	32 95       	swap	r19
 206:	30 7f       	andi	r19, 0xF0	; 240
 208:	82 2b       	or	r24, r18
 20a:	93 2b       	or	r25, r19
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	0f 91       	pop	r16
 214:	ff 90       	pop	r15
 216:	ef 90       	pop	r14
 218:	08 95       	ret

Disassembly of section .text.keypad_to_ascii:

0000010e <keypad_to_ascii>:
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	0e 94 da 00 	call	0x1b4	; 0x1b4 <scan_keypad>
 116:	ec 01       	movw	r28, r24
 118:	8f e5       	ldi	r24, 0x5F	; 95
 11a:	9a ee       	ldi	r25, 0xEA	; 234
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <keypad_to_ascii+0xe>
 120:	00 c0       	rjmp	.+0      	; 0x122 <keypad_to_ascii+0x14>
 122:	00 00       	nop
 124:	0e 94 da 00 	call	0x1b4	; 0x1b4 <scan_keypad>
 128:	8c 23       	and	r24, r28
 12a:	9d 23       	and	r25, r29
 12c:	80 fd       	sbrc	r24, 0
 12e:	20 c0       	rjmp	.+64     	; 0x170 <keypad_to_ascii+0x62>
 130:	81 fd       	sbrc	r24, 1
 132:	20 c0       	rjmp	.+64     	; 0x174 <keypad_to_ascii+0x66>
 134:	82 fd       	sbrc	r24, 2
 136:	20 c0       	rjmp	.+64     	; 0x178 <keypad_to_ascii+0x6a>
 138:	83 fd       	sbrc	r24, 3
 13a:	20 c0       	rjmp	.+64     	; 0x17c <keypad_to_ascii+0x6e>
 13c:	84 fd       	sbrc	r24, 4
 13e:	20 c0       	rjmp	.+64     	; 0x180 <keypad_to_ascii+0x72>
 140:	85 fd       	sbrc	r24, 5
 142:	20 c0       	rjmp	.+64     	; 0x184 <keypad_to_ascii+0x76>
 144:	86 fd       	sbrc	r24, 6
 146:	20 c0       	rjmp	.+64     	; 0x188 <keypad_to_ascii+0x7a>
 148:	87 fd       	sbrc	r24, 7
 14a:	20 c0       	rjmp	.+64     	; 0x18c <keypad_to_ascii+0x7e>
 14c:	90 fd       	sbrc	r25, 0
 14e:	20 c0       	rjmp	.+64     	; 0x190 <keypad_to_ascii+0x82>
 150:	91 fd       	sbrc	r25, 1
 152:	20 c0       	rjmp	.+64     	; 0x194 <keypad_to_ascii+0x86>
 154:	92 fd       	sbrc	r25, 2
 156:	20 c0       	rjmp	.+64     	; 0x198 <keypad_to_ascii+0x8a>
 158:	93 fd       	sbrc	r25, 3
 15a:	20 c0       	rjmp	.+64     	; 0x19c <keypad_to_ascii+0x8e>
 15c:	94 fd       	sbrc	r25, 4
 15e:	20 c0       	rjmp	.+64     	; 0x1a0 <keypad_to_ascii+0x92>
 160:	95 fd       	sbrc	r25, 5
 162:	20 c0       	rjmp	.+64     	; 0x1a4 <keypad_to_ascii+0x96>
 164:	96 fd       	sbrc	r25, 6
 166:	20 c0       	rjmp	.+64     	; 0x1a8 <keypad_to_ascii+0x9a>
 168:	99 23       	and	r25, r25
 16a:	04 f5       	brge	.+64     	; 0x1ac <keypad_to_ascii+0x9e>
 16c:	81 e4       	ldi	r24, 0x41	; 65
 16e:	1f c0       	rjmp	.+62     	; 0x1ae <keypad_to_ascii+0xa0>
 170:	8a e2       	ldi	r24, 0x2A	; 42
 172:	1d c0       	rjmp	.+58     	; 0x1ae <keypad_to_ascii+0xa0>
 174:	80 e3       	ldi	r24, 0x30	; 48
 176:	1b c0       	rjmp	.+54     	; 0x1ae <keypad_to_ascii+0xa0>
 178:	83 e2       	ldi	r24, 0x23	; 35
 17a:	19 c0       	rjmp	.+50     	; 0x1ae <keypad_to_ascii+0xa0>
 17c:	84 e4       	ldi	r24, 0x44	; 68
 17e:	17 c0       	rjmp	.+46     	; 0x1ae <keypad_to_ascii+0xa0>
 180:	87 e3       	ldi	r24, 0x37	; 55
 182:	15 c0       	rjmp	.+42     	; 0x1ae <keypad_to_ascii+0xa0>
 184:	88 e3       	ldi	r24, 0x38	; 56
 186:	13 c0       	rjmp	.+38     	; 0x1ae <keypad_to_ascii+0xa0>
 188:	89 e3       	ldi	r24, 0x39	; 57
 18a:	11 c0       	rjmp	.+34     	; 0x1ae <keypad_to_ascii+0xa0>
 18c:	83 e4       	ldi	r24, 0x43	; 67
 18e:	0f c0       	rjmp	.+30     	; 0x1ae <keypad_to_ascii+0xa0>
 190:	84 e3       	ldi	r24, 0x34	; 52
 192:	0d c0       	rjmp	.+26     	; 0x1ae <keypad_to_ascii+0xa0>
 194:	85 e3       	ldi	r24, 0x35	; 53
 196:	0b c0       	rjmp	.+22     	; 0x1ae <keypad_to_ascii+0xa0>
 198:	86 e3       	ldi	r24, 0x36	; 54
 19a:	09 c0       	rjmp	.+18     	; 0x1ae <keypad_to_ascii+0xa0>
 19c:	82 e4       	ldi	r24, 0x42	; 66
 19e:	07 c0       	rjmp	.+14     	; 0x1ae <keypad_to_ascii+0xa0>
 1a0:	81 e3       	ldi	r24, 0x31	; 49
 1a2:	05 c0       	rjmp	.+10     	; 0x1ae <keypad_to_ascii+0xa0>
 1a4:	82 e3       	ldi	r24, 0x32	; 50
 1a6:	03 c0       	rjmp	.+6      	; 0x1ae <keypad_to_ascii+0xa0>
 1a8:	83 e3       	ldi	r24, 0x33	; 51
 1aa:	01 c0       	rjmp	.+2      	; 0x1ae <keypad_to_ascii+0xa0>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

Disassembly of section .text.char_to_led:

000002b4 <char_to_led>:
 2b4:	0e 94 87 00 	call	0x10e	; 0x10e <__data_load_end>
 2b8:	86 33       	cpi	r24, 0x36	; 54
 2ba:	71 f0       	breq	.+28     	; 0x2d8 <char_to_led+0x24>
 2bc:	18 f4       	brcc	.+6      	; 0x2c4 <char_to_led+0x10>
 2be:	8a 32       	cpi	r24, 0x2A	; 42
 2c0:	71 f0       	breq	.+28     	; 0x2de <char_to_led+0x2a>
 2c2:	10 c0       	rjmp	.+32     	; 0x2e4 <char_to_led+0x30>
 2c4:	88 33       	cpi	r24, 0x38	; 56
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <char_to_led+0x1e>
 2c8:	81 34       	cpi	r24, 0x41	; 65
 2ca:	61 f4       	brne	.+24     	; 0x2e4 <char_to_led+0x30>
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	85 b9       	out	0x05, r24	; 5
 2d0:	08 95       	ret
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	85 b9       	out	0x05, r24	; 5
 2d6:	08 95       	ret
 2d8:	84 e0       	ldi	r24, 0x04	; 4
 2da:	85 b9       	out	0x05, r24	; 5
 2dc:	08 95       	ret
 2de:	88 e0       	ldi	r24, 0x08	; 8
 2e0:	85 b9       	out	0x05, r24	; 5
 2e2:	08 95       	ret
 2e4:	15 b8       	out	0x05, r1	; 5
 2e6:	08 95       	ret

Disassembly of section .text.main:

00000342 <main>:
 342:	8f ef       	ldi	r24, 0xFF	; 255
 344:	84 b9       	out	0x04, r24	; 4
 346:	0e 94 f7 01 	call	0x3ee	; 0x3ee <twi_init>
 34a:	60 ef       	ldi	r22, 0xF0	; 240
 34c:	87 e0       	ldi	r24, 0x07	; 7
 34e:	0e 94 8d 01 	call	0x31a	; 0x31a <PCA9555_0_write>
 352:	2f ef       	ldi	r18, 0xFF	; 255
 354:	80 e7       	ldi	r24, 0x70	; 112
 356:	92 e0       	ldi	r25, 0x02	; 2
 358:	21 50       	subi	r18, 0x01	; 1
 35a:	80 40       	sbci	r24, 0x00	; 0
 35c:	90 40       	sbci	r25, 0x00	; 0
 35e:	e1 f7       	brne	.-8      	; 0x358 <main+0x16>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x20>
 362:	00 00       	nop
 364:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <char_to_led>
 368:	f4 cf       	rjmp	.-24     	; 0x352 <main+0x10>

Disassembly of section .text.__dummy_fini:

00000408 <_fini>:
 408:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000040a <__funcs_on_exit>:
 40a:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000040c <__simulator_exit>:
 40c:	08 95       	ret

Disassembly of section .text.exit:

000003b4 <exit>:
 3b4:	ec 01       	movw	r28, r24
 3b6:	0e 94 05 02 	call	0x40a	; 0x40a <__funcs_on_exit>
 3ba:	0e 94 04 02 	call	0x408	; 0x408 <_fini>
 3be:	ce 01       	movw	r24, r28
 3c0:	0e 94 06 02 	call	0x40c	; 0x40c <__simulator_exit>
 3c4:	ce 01       	movw	r24, r28
 3c6:	0e 94 02 02 	call	0x404	; 0x404 <_Exit>

Disassembly of section .text._Exit:

00000404 <_Exit>:
 404:	0e 94 85 00 	call	0x10a	; 0x10a <_exit>
