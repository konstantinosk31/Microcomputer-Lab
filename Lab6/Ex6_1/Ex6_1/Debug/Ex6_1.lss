
Ex6_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004bc  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000004bc  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  000004eb  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000004f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000128c  00000000  00000000  00000591  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b15  00000000  00000000  0000181d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006bb  00000000  00000000  00002332  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  000029f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000351  00000000  00000000  00002b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005c9  00000000  00000000  00002e95  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000345e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000041a  0000041a  000004ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000034e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.twi_init 0000000c  00000408  00000408  0000049c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.twi_readNak 00000014  000003e4  000003e4  00000478  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.twi_start 0000004c  0000024a  0000024a  000002de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.twi_start_wait 0000004e  000001fc  000001fc  00000290  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.twi_write 00000024  000003aa  000003aa  0000043e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.twi_rep_start 00000006  00000414  00000414  000004a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.twi_stop 00000010  000003f8  000003f8  0000048c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.PCA9555_0_write 00000028  00000334  00000334  000003c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.PCA9555_0_read 00000026  00000384  00000384  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.scan_row 00000032  000002d2  000002d2  00000366  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.scan_keypad 00000066  00000196  00000196  0000022a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.scan_keypad_rising_edge 0000003c  00000296  00000296  0000032a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.keypad_to_ascii 00000088  0000010e  0000010e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.char_to_led 00000030  00000304  00000304  00000398  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.main    00000028  0000035c  0000035c  000003f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .bss.pressed_keys.2032 00000002  00800101  00800101  000004bc  2**0
                  ALLOC
 31 .text.__dummy_fini 00000002  00000422  00000422  000004b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__dummy_funcs_on_exit 00000002  00000424  00000424  000004b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__dummy_simulator_exit 00000002  00000426  00000426  000004ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.exit    00000016  000003ce  000003ce  00000462  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text._Exit   00000004  0000041e  0000041e  000004b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
   8:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
   c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  10:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  14:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  18:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  1c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  20:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  24:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  28:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  2c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  30:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  34:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  38:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  3c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  40:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  44:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  48:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  4c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  50:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  54:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  58:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  5c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  60:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  64:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  68:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  6c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  70:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  74:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  78:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  7c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  80:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  84:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  88:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  8c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  90:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  94:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  98:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  9c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  a0:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  a4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  a8:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  ac:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>
  b0:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__bad_interrupt>

000000b4 <.dinit>:
  b4:	01 00       	.word	0x0001	; ????
  b6:	01 03       	mulsu	r16, r17
  b8:	80 00       	.word	0x0080	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	e4 eb       	ldi	r30, 0xB4	; 180
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	17 c0       	rjmp	.+46     	; 0xfc <__do_clear_bss+0x8>
  ce:	b5 91       	lpm	r27, Z+
  d0:	a5 91       	lpm	r26, Z+
  d2:	35 91       	lpm	r19, Z+
  d4:	25 91       	lpm	r18, Z+
  d6:	05 91       	lpm	r16, Z+
  d8:	07 fd       	sbrc	r16, 7
  da:	0c c0       	rjmp	.+24     	; 0xf4 <__do_clear_bss>
  dc:	95 91       	lpm	r25, Z+
  de:	85 91       	lpm	r24, Z+
  e0:	ef 01       	movw	r28, r30
  e2:	f9 2f       	mov	r31, r25
  e4:	e8 2f       	mov	r30, r24
  e6:	05 90       	lpm	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	a2 17       	cp	r26, r18
  ec:	b3 07       	cpc	r27, r19
  ee:	d9 f7       	brne	.-10     	; 0xe6 <__do_copy_data+0x20>
  f0:	fe 01       	movw	r30, r28
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_clear_bss+0x8>

000000f4 <__do_clear_bss>:
  f4:	1d 92       	st	X+, r1
  f6:	a2 17       	cp	r26, r18
  f8:	b3 07       	cpc	r27, r19
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__do_clear_bss>
  fc:	e9 3b       	cpi	r30, 0xB9	; 185
  fe:	f4 07       	cpc	r31, r20
 100:	31 f7       	brne	.-52     	; 0xce <__do_copy_data+0x8>
 102:	0e 94 ae 01 	call	0x35c	; 0x35c <main>
 106:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <exit>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>

Disassembly of section .text:

0000041a <__bad_interrupt>:
 41a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.twi_init:

00000408 <twi_init>:
#define TW_STATUS (TWSR0 & TW_STATUS_MASK)

//initialize TWI clock
void twi_init(void)
{
	TWSR0 = 0; // PRESCALER_VALUE=1
 408:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = TWBR0_VALUE; // SCL_CLOCK 100KHz
 40c:	88 e4       	ldi	r24, 0x48	; 72
 40e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 412:	08 95       	ret

Disassembly of section .text.twi_readNak:

000003e4 <twi_readNak>:
}

//Read one byte from the twi device, read is followed by a stop condition
unsigned char twi_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 3e4:	84 e8       	ldi	r24, 0x84	; 132
 3e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR0 & (1<<TWINT)));
 3ea:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3ee:	88 23       	and	r24, r24
 3f0:	e4 f7       	brge	.-8      	; 0x3ea <twi_readNak+0x6>
	return TWDR0;
 3f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 3f6:	08 95       	ret

Disassembly of section .text.twi_start:

0000024a <twi_start>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 24a:	94 ea       	ldi	r25, 0xA4	; 164
 24c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 250:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 254:	99 23       	and	r25, r25
 256:	e4 f7       	brge	.-8      	; 0x250 <twi_start+0x6>
 258:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 25c:	98 7f       	andi	r25, 0xF8	; 248
 25e:	98 30       	cpi	r25, 0x08	; 8
 260:	11 f0       	breq	.+4      	; 0x266 <twi_start+0x1c>
 262:	90 31       	cpi	r25, 0x10	; 16
 264:	91 f4       	brne	.+36     	; 0x28a <twi_start+0x40>
 266:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 26a:	84 e8       	ldi	r24, 0x84	; 132
 26c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 270:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 274:	88 23       	and	r24, r24
 276:	e4 f7       	brge	.-8      	; 0x270 <twi_start+0x26>
 278:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 27c:	88 7f       	andi	r24, 0xF8	; 248
 27e:	88 31       	cpi	r24, 0x18	; 24
 280:	31 f0       	breq	.+12     	; 0x28e <twi_start+0x44>
 282:	80 34       	cpi	r24, 0x40	; 64
 284:	31 f4       	brne	.+12     	; 0x292 <twi_start+0x48>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	08 95       	ret
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	08 95       	ret
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	08 95       	ret
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	08 95       	ret

Disassembly of section .text.twi_start_wait:

000001fc <twi_start_wait>:
 1fc:	94 ea       	ldi	r25, 0xA4	; 164
 1fe:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 202:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 206:	99 23       	and	r25, r25
 208:	e4 f7       	brge	.-8      	; 0x202 <twi_start_wait+0x6>
 20a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 20e:	98 7f       	andi	r25, 0xF8	; 248
 210:	98 30       	cpi	r25, 0x08	; 8
 212:	11 f0       	breq	.+4      	; 0x218 <twi_start_wait+0x1c>
 214:	90 31       	cpi	r25, 0x10	; 16
 216:	91 f7       	brne	.-28     	; 0x1fc <twi_start_wait>
 218:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 21c:	94 e8       	ldi	r25, 0x84	; 132
 21e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 222:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 226:	99 23       	and	r25, r25
 228:	e4 f7       	brge	.-8      	; 0x222 <twi_start_wait+0x26>
 22a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 22e:	98 7f       	andi	r25, 0xF8	; 248
 230:	90 32       	cpi	r25, 0x20	; 32
 232:	11 f0       	breq	.+4      	; 0x238 <twi_start_wait+0x3c>
 234:	98 35       	cpi	r25, 0x58	; 88
 236:	41 f4       	brne	.+16     	; 0x248 <twi_start_wait+0x4c>
 238:	94 e9       	ldi	r25, 0x94	; 148
 23a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 23e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 242:	94 fd       	sbrc	r25, 4
 244:	fc cf       	rjmp	.-8      	; 0x23e <twi_start_wait+0x42>
 246:	da cf       	rjmp	.-76     	; 0x1fc <twi_start_wait>
 248:	08 95       	ret

Disassembly of section .text.twi_write:

000003aa <twi_write>:
 3aa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 3ae:	84 e8       	ldi	r24, 0x84	; 132
 3b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3b8:	88 23       	and	r24, r24
 3ba:	e4 f7       	brge	.-8      	; 0x3b4 <twi_write+0xa>
 3bc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 3c0:	88 7f       	andi	r24, 0xF8	; 248
 3c2:	88 32       	cpi	r24, 0x28	; 40
 3c4:	11 f0       	breq	.+4      	; 0x3ca <twi_write+0x20>
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	08 95       	ret
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	08 95       	ret

Disassembly of section .text.twi_rep_start:

00000414 <twi_rep_start>:
// Send repeated start condition, address, transfer direction
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
 414:	0e 94 25 01 	call	0x24a	; 0x24a <twi_start>
}
 418:	08 95       	ret

Disassembly of section .text.twi_stop:

000003f8 <twi_stop>:

// Terminates the data transfer and releases the twi bus
void twi_stop(void)
{
	// send stop condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 3f8:	84 e9       	ldi	r24, 0x94	; 148
 3fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
 3fe:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 402:	84 fd       	sbrc	r24, 4
 404:	fc cf       	rjmp	.-8      	; 0x3fe <twi_stop+0x6>
}
 406:	08 95       	ret

Disassembly of section .text.PCA9555_0_write:

00000334 <PCA9555_0_write>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 334:	cf 93       	push	r28
 336:	df 93       	push	r29
 338:	d8 2f       	mov	r29, r24
 33a:	c6 2f       	mov	r28, r22
 33c:	80 e4       	ldi	r24, 0x40	; 64
 33e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <twi_start_wait>
 342:	8d 2f       	mov	r24, r29
 344:	0e 94 d5 01 	call	0x3aa	; 0x3aa <twi_write>
 348:	8c 2f       	mov	r24, r28
 34a:	0e 94 d5 01 	call	0x3aa	; 0x3aa <twi_write>
 34e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <twi_stop>
 352:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <_edata>
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	08 95       	ret

Disassembly of section .text.PCA9555_0_read:

00000384 <PCA9555_0_read>:
 384:	cf 93       	push	r28
 386:	c8 2f       	mov	r28, r24
 388:	80 e4       	ldi	r24, 0x40	; 64
 38a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <twi_start_wait>
 38e:	8c 2f       	mov	r24, r28
 390:	0e 94 d5 01 	call	0x3aa	; 0x3aa <twi_write>
 394:	81 e4       	ldi	r24, 0x41	; 65
 396:	0e 94 0a 02 	call	0x414	; 0x414 <twi_rep_start>
 39a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <twi_readNak>
 39e:	c8 2f       	mov	r28, r24
 3a0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <twi_stop>
 3a4:	8c 2f       	mov	r24, r28
 3a6:	cf 91       	pop	r28
 3a8:	08 95       	ret

Disassembly of section .text.scan_row:

000002d2 <scan_row>:
 2d2:	61 e0       	ldi	r22, 0x01	; 1
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <scan_row+0xa>
 2d8:	66 0f       	add	r22, r22
 2da:	77 1f       	adc	r23, r23
 2dc:	8a 95       	dec	r24
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <scan_row+0x6>
 2e0:	60 95       	com	r22
 2e2:	6f 70       	andi	r22, 0x0F	; 15
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	0e 94 9a 01 	call	0x334	; 0x334 <PCA9555_0_write>
 2ea:	8f e8       	ldi	r24, 0x8F	; 143
 2ec:	91 e0       	ldi	r25, 0x01	; 1
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <scan_row+0x1c>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <scan_row+0x22>
 2f4:	00 00       	nop
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 c2 01 	call	0x384	; 0x384 <PCA9555_0_read>
 2fc:	80 95       	com	r24
 2fe:	82 95       	swap	r24
 300:	8f 70       	andi	r24, 0x0F	; 15
 302:	08 95       	ret

Disassembly of section .text.scan_keypad:

00000196 <scan_keypad>:
 196:	ef 92       	push	r14
 198:	ff 92       	push	r15
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <scan_row>
 1a8:	e8 2e       	mov	r14, r24
 1aa:	f1 2c       	mov	r15, r1
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	0e 94 69 01 	call	0x2d2	; 0x2d2 <scan_row>
 1b2:	08 2f       	mov	r16, r24
 1b4:	10 e0       	ldi	r17, 0x00	; 0
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <scan_row>
 1bc:	c8 2f       	mov	r28, r24
 1be:	d0 e0       	ldi	r29, 0x00	; 0
 1c0:	83 e0       	ldi	r24, 0x03	; 3
 1c2:	0e 94 69 01 	call	0x2d2	; 0x2d2 <scan_row>
 1c6:	28 2f       	mov	r18, r24
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	02 95       	swap	r16
 1cc:	12 95       	swap	r17
 1ce:	10 7f       	andi	r17, 0xF0	; 240
 1d0:	10 27       	eor	r17, r16
 1d2:	00 7f       	andi	r16, 0xF0	; 240
 1d4:	10 27       	eor	r17, r16
 1d6:	0e 29       	or	r16, r14
 1d8:	1f 29       	or	r17, r15
 1da:	9c 2f       	mov	r25, r28
 1dc:	88 27       	eor	r24, r24
 1de:	80 2b       	or	r24, r16
 1e0:	91 2b       	or	r25, r17
 1e2:	32 2f       	mov	r19, r18
 1e4:	22 27       	eor	r18, r18
 1e6:	32 95       	swap	r19
 1e8:	30 7f       	andi	r19, 0xF0	; 240
 1ea:	82 2b       	or	r24, r18
 1ec:	93 2b       	or	r25, r19
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	1f 91       	pop	r17
 1f4:	0f 91       	pop	r16
 1f6:	ff 90       	pop	r15
 1f8:	ef 90       	pop	r14
 1fa:	08 95       	ret

Disassembly of section .text.scan_keypad_rising_edge:

00000296 <scan_keypad_rising_edge>:
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	0e 94 cb 00 	call	0x196	; 0x196 <scan_keypad>
 29e:	ec 01       	movw	r28, r24
 2a0:	8f e5       	ldi	r24, 0x5F	; 95
 2a2:	9a ee       	ldi	r25, 0xEA	; 234
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <scan_keypad_rising_edge+0xe>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <scan_keypad_rising_edge+0x14>
 2aa:	00 00       	nop
 2ac:	0e 94 cb 00 	call	0x196	; 0x196 <scan_keypad>
 2b0:	8c 23       	and	r24, r28
 2b2:	9d 23       	and	r25, r29
 2b4:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <_end>
 2b8:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <_end+0x1>
 2bc:	20 95       	com	r18
 2be:	30 95       	com	r19
 2c0:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_end+0x1>
 2c4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_end>
 2c8:	82 23       	and	r24, r18
 2ca:	93 23       	and	r25, r19
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

Disassembly of section .text.keypad_to_ascii:

0000010e <keypad_to_ascii>:
 10e:	0e 94 4b 01 	call	0x296	; 0x296 <scan_keypad_rising_edge>
 112:	80 fd       	sbrc	r24, 0
 114:	20 c0       	rjmp	.+64     	; 0x156 <keypad_to_ascii+0x48>
 116:	81 fd       	sbrc	r24, 1
 118:	20 c0       	rjmp	.+64     	; 0x15a <keypad_to_ascii+0x4c>
 11a:	82 fd       	sbrc	r24, 2
 11c:	20 c0       	rjmp	.+64     	; 0x15e <keypad_to_ascii+0x50>
 11e:	83 fd       	sbrc	r24, 3
 120:	20 c0       	rjmp	.+64     	; 0x162 <keypad_to_ascii+0x54>
 122:	84 fd       	sbrc	r24, 4
 124:	20 c0       	rjmp	.+64     	; 0x166 <keypad_to_ascii+0x58>
 126:	85 fd       	sbrc	r24, 5
 128:	20 c0       	rjmp	.+64     	; 0x16a <keypad_to_ascii+0x5c>
 12a:	86 fd       	sbrc	r24, 6
 12c:	20 c0       	rjmp	.+64     	; 0x16e <keypad_to_ascii+0x60>
 12e:	87 fd       	sbrc	r24, 7
 130:	20 c0       	rjmp	.+64     	; 0x172 <keypad_to_ascii+0x64>
 132:	90 fd       	sbrc	r25, 0
 134:	20 c0       	rjmp	.+64     	; 0x176 <keypad_to_ascii+0x68>
 136:	91 fd       	sbrc	r25, 1
 138:	20 c0       	rjmp	.+64     	; 0x17a <keypad_to_ascii+0x6c>
 13a:	92 fd       	sbrc	r25, 2
 13c:	20 c0       	rjmp	.+64     	; 0x17e <keypad_to_ascii+0x70>
 13e:	93 fd       	sbrc	r25, 3
 140:	20 c0       	rjmp	.+64     	; 0x182 <keypad_to_ascii+0x74>
 142:	94 fd       	sbrc	r25, 4
 144:	20 c0       	rjmp	.+64     	; 0x186 <keypad_to_ascii+0x78>
 146:	95 fd       	sbrc	r25, 5
 148:	20 c0       	rjmp	.+64     	; 0x18a <keypad_to_ascii+0x7c>
 14a:	96 fd       	sbrc	r25, 6
 14c:	20 c0       	rjmp	.+64     	; 0x18e <keypad_to_ascii+0x80>
 14e:	99 23       	and	r25, r25
 150:	04 f5       	brge	.+64     	; 0x192 <keypad_to_ascii+0x84>
 152:	81 e4       	ldi	r24, 0x41	; 65
 154:	08 95       	ret
 156:	8a e2       	ldi	r24, 0x2A	; 42
 158:	08 95       	ret
 15a:	80 e3       	ldi	r24, 0x30	; 48
 15c:	08 95       	ret
 15e:	83 e2       	ldi	r24, 0x23	; 35
 160:	08 95       	ret
 162:	84 e4       	ldi	r24, 0x44	; 68
 164:	08 95       	ret
 166:	87 e3       	ldi	r24, 0x37	; 55
 168:	08 95       	ret
 16a:	88 e3       	ldi	r24, 0x38	; 56
 16c:	08 95       	ret
 16e:	89 e3       	ldi	r24, 0x39	; 57
 170:	08 95       	ret
 172:	83 e4       	ldi	r24, 0x43	; 67
 174:	08 95       	ret
 176:	84 e3       	ldi	r24, 0x34	; 52
 178:	08 95       	ret
 17a:	85 e3       	ldi	r24, 0x35	; 53
 17c:	08 95       	ret
 17e:	86 e3       	ldi	r24, 0x36	; 54
 180:	08 95       	ret
 182:	82 e4       	ldi	r24, 0x42	; 66
 184:	08 95       	ret
 186:	81 e3       	ldi	r24, 0x31	; 49
 188:	08 95       	ret
 18a:	82 e3       	ldi	r24, 0x32	; 50
 18c:	08 95       	ret
 18e:	83 e3       	ldi	r24, 0x33	; 51
 190:	08 95       	ret
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	08 95       	ret

Disassembly of section .text.char_to_led:

00000304 <char_to_led>:
 304:	0e 94 87 00 	call	0x10e	; 0x10e <_etext>
 308:	86 33       	cpi	r24, 0x36	; 54
 30a:	71 f0       	breq	.+28     	; 0x328 <char_to_led+0x24>
 30c:	18 f4       	brcc	.+6      	; 0x314 <char_to_led+0x10>
 30e:	8a 32       	cpi	r24, 0x2A	; 42
 310:	71 f0       	breq	.+28     	; 0x32e <char_to_led+0x2a>
 312:	08 95       	ret
 314:	88 33       	cpi	r24, 0x38	; 56
 316:	29 f0       	breq	.+10     	; 0x322 <char_to_led+0x1e>
 318:	81 34       	cpi	r24, 0x41	; 65
 31a:	59 f4       	brne	.+22     	; 0x332 <char_to_led+0x2e>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	85 b9       	out	0x05, r24	; 5
 320:	08 95       	ret
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	85 b9       	out	0x05, r24	; 5
 326:	08 95       	ret
 328:	84 e0       	ldi	r24, 0x04	; 4
 32a:	85 b9       	out	0x05, r24	; 5
 32c:	08 95       	ret
 32e:	88 e0       	ldi	r24, 0x08	; 8
 330:	85 b9       	out	0x05, r24	; 5
 332:	08 95       	ret

Disassembly of section .text.main:

0000035c <main>:
 35c:	8f ef       	ldi	r24, 0xFF	; 255
 35e:	84 b9       	out	0x04, r24	; 4
 360:	0e 94 04 02 	call	0x408	; 0x408 <twi_init>
 364:	60 ef       	ldi	r22, 0xF0	; 240
 366:	87 e0       	ldi	r24, 0x07	; 7
 368:	0e 94 9a 01 	call	0x334	; 0x334 <PCA9555_0_write>
 36c:	2f ef       	ldi	r18, 0xFF	; 255
 36e:	80 e7       	ldi	r24, 0x70	; 112
 370:	92 e0       	ldi	r25, 0x02	; 2
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <main+0x16>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <main+0x20>
 37c:	00 00       	nop
 37e:	0e 94 82 01 	call	0x304	; 0x304 <char_to_led>
 382:	f4 cf       	rjmp	.-24     	; 0x36c <main+0x10>

Disassembly of section .text.__dummy_fini:

00000422 <_fini>:
 422:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000424 <__funcs_on_exit>:
 424:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000426 <__simulator_exit>:
 426:	08 95       	ret

Disassembly of section .text.exit:

000003ce <exit>:
 3ce:	ec 01       	movw	r28, r24
 3d0:	0e 94 12 02 	call	0x424	; 0x424 <__funcs_on_exit>
 3d4:	0e 94 11 02 	call	0x422	; 0x422 <_fini>
 3d8:	ce 01       	movw	r24, r28
 3da:	0e 94 13 02 	call	0x426	; 0x426 <__simulator_exit>
 3de:	ce 01       	movw	r24, r28
 3e0:	0e 94 0f 02 	call	0x41e	; 0x41e <_Exit>

Disassembly of section .text._Exit:

0000041e <_Exit>:
 41e:	0e 94 85 00 	call	0x10a	; 0x10a <_exit>
