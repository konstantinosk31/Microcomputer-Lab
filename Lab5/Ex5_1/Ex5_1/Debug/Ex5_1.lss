
Ex5_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002ae  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002ae  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000002dd  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000002eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f60  00000000  00000000  0000035b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009f6  00000000  00000000  000012bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000529  00000000  00000000  00001cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  000021dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032b  00000000  00000000  000022b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002bc  00000000  00000000  000025df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000289b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000022c  0000022c  000002a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000028fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.twi_init 0000000c  00000220  00000220  00000294  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.twi_start_wait 0000004e  00000164  00000164  000001d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.twi_write 00000024  000001b2  000001b2  00000226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.twi_stop 00000010  00000210  00000210  00000284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.PCA9555_0_write 00000024  000001d6  000001d6  0000024a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    00000098  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_fini 00000002  00000234  00000234  000002a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_funcs_on_exit 00000002  00000236  00000236  000002aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_simulator_exit 00000002  00000238  00000238  000002ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.exit    00000016  000001fa  000001fa  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._Exit   00000004  00000230  00000230  000002a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <_etext>
  c4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>

Disassembly of section .text:

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.twi_init:

00000220 <twi_init>:
#define TW_STATUS (TWSR0 & TW_STATUS_MASK)

//initialize TWI clock
void twi_init(void)
{
	TWSR0 = 0; // PRESCALER_VALUE=1
 220:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = TWBR0_VALUE; // SCL_CLOCK 100KHz
 224:	88 e4       	ldi	r24, 0x48	; 72
 226:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 22a:	08 95       	ret

Disassembly of section .text.twi_start_wait:

00000164 <twi_start_wait>:
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
}
 164:	94 ea       	ldi	r25, 0xA4	; 164
 166:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16e:	99 23       	and	r25, r25
 170:	e4 f7       	brge	.-8      	; 0x16a <twi_start_wait+0x6>
 172:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 176:	98 7f       	andi	r25, 0xF8	; 248
 178:	98 30       	cpi	r25, 0x08	; 8
 17a:	11 f0       	breq	.+4      	; 0x180 <twi_start_wait+0x1c>
 17c:	90 31       	cpi	r25, 0x10	; 16
 17e:	91 f7       	brne	.-28     	; 0x164 <twi_start_wait>
 180:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 184:	94 e8       	ldi	r25, 0x84	; 132
 186:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 18a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 18e:	99 23       	and	r25, r25
 190:	e4 f7       	brge	.-8      	; 0x18a <twi_start_wait+0x26>
 192:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 196:	98 7f       	andi	r25, 0xF8	; 248
 198:	90 32       	cpi	r25, 0x20	; 32
 19a:	11 f0       	breq	.+4      	; 0x1a0 <twi_start_wait+0x3c>
 19c:	98 35       	cpi	r25, 0x58	; 88
 19e:	41 f4       	brne	.+16     	; 0x1b0 <twi_start_wait+0x4c>
 1a0:	94 e9       	ldi	r25, 0x94	; 148
 1a2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1aa:	94 fd       	sbrc	r25, 4
 1ac:	fc cf       	rjmp	.-8      	; 0x1a6 <twi_start_wait+0x42>
 1ae:	da cf       	rjmp	.-76     	; 0x164 <twi_start_wait>
 1b0:	08 95       	ret

Disassembly of section .text.twi_write:

000001b2 <twi_write>:
 1b2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1b6:	84 e8       	ldi	r24, 0x84	; 132
 1b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1bc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c0:	88 23       	and	r24, r24
 1c2:	e4 f7       	brge	.-8      	; 0x1bc <twi_write+0xa>
 1c4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1c8:	88 7f       	andi	r24, 0xF8	; 248
 1ca:	88 32       	cpi	r24, 0x28	; 40
 1cc:	11 f0       	breq	.+4      	; 0x1d2 <twi_write+0x20>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	08 95       	ret
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	08 95       	ret

Disassembly of section .text.twi_stop:

00000210 <twi_stop>:

// Terminates the data transfer and releases the twi bus
void twi_stop(void)
{
	// send stop condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 210:	84 e9       	ldi	r24, 0x94	; 148
 212:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
 216:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 21a:	84 fd       	sbrc	r24, 4
 21c:	fc cf       	rjmp	.-8      	; 0x216 <twi_stop+0x6>
}
 21e:	08 95       	ret

Disassembly of section .text.PCA9555_0_write:

000001d6 <PCA9555_0_write>:
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
}
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	d8 2f       	mov	r29, r24
 1dc:	c6 2f       	mov	r28, r22
 1de:	80 e4       	ldi	r24, 0x40	; 64
 1e0:	0e 94 b2 00 	call	0x164	; 0x164 <twi_start_wait>
 1e4:	8d 2f       	mov	r24, r29
 1e6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <twi_write>
 1ea:	8c 2f       	mov	r24, r28
 1ec:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <twi_write>
 1f0:	0e 94 08 01 	call	0x210	; 0x210 <twi_stop>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

Disassembly of section .text.main:

000000cc <main>:
  cc:	0e 94 10 01 	call	0x220	; 0x220 <twi_init>
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	86 e0       	ldi	r24, 0x06	; 6
  d4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <PCA9555_0_write>
  d8:	14 b8       	out	0x04, r1	; 4
  da:	83 b1       	in	r24, 0x03	; 3
  dc:	80 95       	com	r24
  de:	28 2f       	mov	r18, r24
  e0:	22 70       	andi	r18, 0x02	; 2
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	e8 2f       	mov	r30, r24
  e6:	e4 70       	andi	r30, 0x04	; 4
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	48 2f       	mov	r20, r24
  ec:	48 70       	andi	r20, 0x08	; 8
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	98 2f       	mov	r25, r24
  f2:	91 70       	andi	r25, 0x01	; 1
  f4:	c9 2f       	mov	r28, r25
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	d9 2f       	mov	r29, r25
  fa:	80 fd       	sbrc	r24, 0
  fc:	05 c0       	rjmp	.+10     	; 0x108 <main+0x3c>
  fe:	21 15       	cp	r18, r1
 100:	31 05       	cpc	r19, r1
 102:	11 f0       	breq	.+4      	; 0x108 <main+0x3c>
 104:	30 97       	sbiw	r30, 0x00	; 0
 106:	41 f4       	brne	.+16     	; 0x118 <main+0x4c>
 108:	21 15       	cp	r18, r1
 10a:	31 05       	cpc	r19, r1
 10c:	39 f4       	brne	.+14     	; 0x11c <main+0x50>
 10e:	41 15       	cp	r20, r1
 110:	51 05       	cpc	r21, r1
 112:	31 f0       	breq	.+12     	; 0x120 <main+0x54>
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	05 c0       	rjmp	.+10     	; 0x122 <main+0x56>
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	03 c0       	rjmp	.+6      	; 0x122 <main+0x56>
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	01 c0       	rjmp	.+2      	; 0x122 <main+0x56>
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	89 2f       	mov	r24, r25
 124:	81 70       	andi	r24, 0x01	; 1
 126:	cd 2b       	or	r28, r29
 128:	29 f4       	brne	.+10     	; 0x134 <main+0x68>
 12a:	21 15       	cp	r18, r1
 12c:	31 05       	cpc	r19, r1
 12e:	11 f4       	brne	.+4      	; 0x134 <main+0x68>
 130:	ef 2b       	or	r30, r31
 132:	39 f0       	breq	.+14     	; 0x142 <main+0x76>
 134:	23 2b       	or	r18, r19
 136:	41 f0       	breq	.+16     	; 0x148 <main+0x7c>
 138:	45 2b       	or	r20, r21
 13a:	49 f0       	breq	.+18     	; 0x14e <main+0x82>
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	08 c0       	rjmp	.+16     	; 0x152 <main+0x86>
 142:	60 e0       	ldi	r22, 0x00	; 0
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	05 c0       	rjmp	.+10     	; 0x152 <main+0x86>
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <main+0x86>
 14e:	61 e0       	ldi	r22, 0x01	; 1
 150:	70 e0       	ldi	r23, 0x00	; 0
 152:	61 70       	andi	r22, 0x01	; 1
 154:	77 27       	eor	r23, r23
 156:	66 0f       	add	r22, r22
 158:	77 1f       	adc	r23, r23
 15a:	68 2b       	or	r22, r24
 15c:	82 e0       	ldi	r24, 0x02	; 2
 15e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <PCA9555_0_write>
 162:	bb cf       	rjmp	.-138    	; 0xda <main+0xe>

Disassembly of section .text.__dummy_fini:

00000234 <_fini>:
 234:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000236 <__funcs_on_exit>:
 236:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000238 <__simulator_exit>:
 238:	08 95       	ret

Disassembly of section .text.exit:

000001fa <exit>:
 1fa:	ec 01       	movw	r28, r24
 1fc:	0e 94 1b 01 	call	0x236	; 0x236 <__funcs_on_exit>
 200:	0e 94 1a 01 	call	0x234	; 0x234 <_fini>
 204:	ce 01       	movw	r24, r28
 206:	0e 94 1c 01 	call	0x238	; 0x238 <__simulator_exit>
 20a:	ce 01       	movw	r24, r28
 20c:	0e 94 18 01 	call	0x230	; 0x230 <_Exit>

Disassembly of section .text._Exit:

00000230 <_Exit>:
 230:	0e 94 64 00 	call	0xc8	; 0xc8 <_exit>
