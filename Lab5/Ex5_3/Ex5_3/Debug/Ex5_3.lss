
Ex5_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004e8  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000004e8  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000517  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000525  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014d7  00000000  00000000  000005cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b44  00000000  00000000  00001aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c1  00000000  00000000  000025e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002cac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000351  00000000  00000000  00002e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006ab  00000000  00000000  00003185  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003830  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000426  00000426  000004da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000038c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.twi_init 0000000c  00000414  00000414  000004c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.twi_readNak 00000014  000003f0  000003f0  000004a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.twi_start 0000004c  000001e8  000001e8  0000029c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.twi_start_wait 0000004e  0000019a  0000019a  0000024e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.twi_write 00000024  0000037c  0000037c  00000430  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.twi_rep_start 00000006  00000420  00000420  000004d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.twi_stop 00000010  00000404  00000404  000004b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.PCA9555_0_write 00000028  000002e2  000002e2  00000396  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.PCA9555_0_read 00000026  0000030a  0000030a  000003be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.flash   0000003a  00000270  00000270  00000324  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.write_2_nibbles 00000038  000002aa  000002aa  0000035e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.lcd_data 00000026  00000330  00000330  000003e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.lcd_command 00000026  00000356  00000356  0000040a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.lcd_clear_display 0000001a  000003c0  000003c0  00000474  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.lcd_init 00000070  0000012a  0000012a  000001de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.lcd_string 0000003c  00000234  00000234  000002e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.main    00000020  000003a0  000003a0  00000454  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .progmemx.data.name 0000001b  0000010e  0000010e  000001c2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 33 .text.__dummy_fini 00000002  0000042e  0000042e  000004e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__dummy_funcs_on_exit 00000002  00000430  00000430  000004e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__dummy_simulator_exit 00000002  00000432  00000432  000004e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.exit    00000016  000003da  000003da  0000048e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text._Exit   00000004  0000042a  0000042a  000004de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
   8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
   c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  10:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  14:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  18:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  1c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  20:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  24:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  28:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  2c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  30:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  34:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  38:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  3c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  40:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  44:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  48:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  4c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  50:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  54:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  58:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  5c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  60:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  64:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  68:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  6c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  70:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  74:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  78:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  7c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  80:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  84:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  88:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  8c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  90:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  94:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  98:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  9c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  a0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  a4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  a8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  ac:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
  b0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>

000000b4 <.dinit>:
  b4:	01 00       	.word	0x0001	; ????
  b6:	01 01       	movw	r0, r2
  b8:	80 00       	.word	0x0080	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	e4 eb       	ldi	r30, 0xB4	; 180
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	17 c0       	rjmp	.+46     	; 0xfc <__do_clear_bss+0x8>
  ce:	b5 91       	lpm	r27, Z+
  d0:	a5 91       	lpm	r26, Z+
  d2:	35 91       	lpm	r19, Z+
  d4:	25 91       	lpm	r18, Z+
  d6:	05 91       	lpm	r16, Z+
  d8:	07 fd       	sbrc	r16, 7
  da:	0c c0       	rjmp	.+24     	; 0xf4 <__do_clear_bss>
  dc:	95 91       	lpm	r25, Z+
  de:	85 91       	lpm	r24, Z+
  e0:	ef 01       	movw	r28, r30
  e2:	f9 2f       	mov	r31, r25
  e4:	e8 2f       	mov	r30, r24
  e6:	05 90       	lpm	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	a2 17       	cp	r26, r18
  ec:	b3 07       	cpc	r27, r19
  ee:	d9 f7       	brne	.-10     	; 0xe6 <__do_copy_data+0x20>
  f0:	fe 01       	movw	r30, r28
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_clear_bss+0x8>

000000f4 <__do_clear_bss>:
  f4:	1d 92       	st	X+, r1
  f6:	a2 17       	cp	r26, r18
  f8:	b3 07       	cpc	r27, r19
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__do_clear_bss>
  fc:	e9 3b       	cpi	r30, 0xB9	; 185
  fe:	f4 07       	cpc	r31, r20
 100:	31 f7       	brne	.-52     	; 0xce <__do_copy_data+0x8>
 102:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <main>
 106:	0c 94 ed 01 	jmp	0x3da	; 0x3da <exit>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>

Disassembly of section .text:

00000426 <__bad_interrupt>:
 426:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.twi_init:

00000414 <twi_init>:
#define TW_STATUS (TWSR0 & TW_STATUS_MASK)

//initialize TWI clock
void twi_init(void)
{
	TWSR0 = 0; // PRESCALER_VALUE=1
 414:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = TWBR0_VALUE; // SCL_CLOCK 100KHz
 418:	88 e4       	ldi	r24, 0x48	; 72
 41a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 41e:	08 95       	ret

Disassembly of section .text.twi_readNak:

000003f0 <twi_readNak>:
}

//Read one byte from the twi device, read is followed by a stop condition
unsigned char twi_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 3f0:	84 e8       	ldi	r24, 0x84	; 132
 3f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR0 & (1<<TWINT)));
 3f6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3fa:	88 23       	and	r24, r24
 3fc:	e4 f7       	brge	.-8      	; 0x3f6 <twi_readNak+0x6>
	return TWDR0;
 3fe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 402:	08 95       	ret

Disassembly of section .text.twi_start:

000001e8 <twi_start>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 1e8:	94 ea       	ldi	r25, 0xA4	; 164
 1ea:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ee:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f2:	99 23       	and	r25, r25
 1f4:	e4 f7       	brge	.-8      	; 0x1ee <twi_start+0x6>
 1f6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1fa:	98 7f       	andi	r25, 0xF8	; 248
 1fc:	98 30       	cpi	r25, 0x08	; 8
 1fe:	11 f0       	breq	.+4      	; 0x204 <twi_start+0x1c>
 200:	90 31       	cpi	r25, 0x10	; 16
 202:	91 f4       	brne	.+36     	; 0x228 <twi_start+0x40>
 204:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 208:	84 e8       	ldi	r24, 0x84	; 132
 20a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 212:	88 23       	and	r24, r24
 214:	e4 f7       	brge	.-8      	; 0x20e <twi_start+0x26>
 216:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 21a:	88 7f       	andi	r24, 0xF8	; 248
 21c:	88 31       	cpi	r24, 0x18	; 24
 21e:	31 f0       	breq	.+12     	; 0x22c <twi_start+0x44>
 220:	80 34       	cpi	r24, 0x40	; 64
 222:	31 f4       	brne	.+12     	; 0x230 <twi_start+0x48>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	08 95       	ret
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	08 95       	ret
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	08 95       	ret
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	08 95       	ret

Disassembly of section .text.twi_start_wait:

0000019a <twi_start_wait>:
 19a:	94 ea       	ldi	r25, 0xA4	; 164
 19c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a4:	99 23       	and	r25, r25
 1a6:	e4 f7       	brge	.-8      	; 0x1a0 <twi_start_wait+0x6>
 1a8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1ac:	98 7f       	andi	r25, 0xF8	; 248
 1ae:	98 30       	cpi	r25, 0x08	; 8
 1b0:	11 f0       	breq	.+4      	; 0x1b6 <twi_start_wait+0x1c>
 1b2:	90 31       	cpi	r25, 0x10	; 16
 1b4:	91 f7       	brne	.-28     	; 0x19a <twi_start_wait>
 1b6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1ba:	94 e8       	ldi	r25, 0x84	; 132
 1bc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c0:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c4:	99 23       	and	r25, r25
 1c6:	e4 f7       	brge	.-8      	; 0x1c0 <twi_start_wait+0x26>
 1c8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1cc:	98 7f       	andi	r25, 0xF8	; 248
 1ce:	90 32       	cpi	r25, 0x20	; 32
 1d0:	11 f0       	breq	.+4      	; 0x1d6 <twi_start_wait+0x3c>
 1d2:	98 35       	cpi	r25, 0x58	; 88
 1d4:	41 f4       	brne	.+16     	; 0x1e6 <twi_start_wait+0x4c>
 1d6:	94 e9       	ldi	r25, 0x94	; 148
 1d8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1dc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1e0:	94 fd       	sbrc	r25, 4
 1e2:	fc cf       	rjmp	.-8      	; 0x1dc <twi_start_wait+0x42>
 1e4:	da cf       	rjmp	.-76     	; 0x19a <twi_start_wait>
 1e6:	08 95       	ret

Disassembly of section .text.twi_write:

0000037c <twi_write>:
 37c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 380:	84 e8       	ldi	r24, 0x84	; 132
 382:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 386:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 38a:	88 23       	and	r24, r24
 38c:	e4 f7       	brge	.-8      	; 0x386 <twi_write+0xa>
 38e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 392:	88 7f       	andi	r24, 0xF8	; 248
 394:	88 32       	cpi	r24, 0x28	; 40
 396:	11 f0       	breq	.+4      	; 0x39c <twi_write+0x20>
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	08 95       	ret
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	08 95       	ret

Disassembly of section .text.twi_rep_start:

00000420 <twi_rep_start>:
// Send repeated start condition, address, transfer direction
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
 420:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <twi_start>
}
 424:	08 95       	ret

Disassembly of section .text.twi_stop:

00000404 <twi_stop>:

// Terminates the data transfer and releases the twi bus
void twi_stop(void)
{
	// send stop condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 404:	84 e9       	ldi	r24, 0x94	; 148
 406:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
 40a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 40e:	84 fd       	sbrc	r24, 4
 410:	fc cf       	rjmp	.-8      	; 0x40a <twi_stop+0x6>
}
 412:	08 95       	ret

Disassembly of section .text.PCA9555_0_write:

000002e2 <PCA9555_0_write>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	d8 2f       	mov	r29, r24
 2e8:	c6 2f       	mov	r28, r22
 2ea:	80 e4       	ldi	r24, 0x40	; 64
 2ec:	0e 94 cd 00 	call	0x19a	; 0x19a <twi_start_wait>
 2f0:	8d 2f       	mov	r24, r29
 2f2:	0e 94 be 01 	call	0x37c	; 0x37c <twi_write>
 2f6:	8c 2f       	mov	r24, r28
 2f8:	0e 94 be 01 	call	0x37c	; 0x37c <twi_write>
 2fc:	0e 94 02 02 	call	0x404	; 0x404 <twi_stop>
 300:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__DATA_REGION_ORIGIN__>
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	08 95       	ret

Disassembly of section .text.PCA9555_0_read:

0000030a <PCA9555_0_read>:
 30a:	cf 93       	push	r28
 30c:	c8 2f       	mov	r28, r24
 30e:	80 e4       	ldi	r24, 0x40	; 64
 310:	0e 94 cd 00 	call	0x19a	; 0x19a <twi_start_wait>
 314:	8c 2f       	mov	r24, r28
 316:	0e 94 be 01 	call	0x37c	; 0x37c <twi_write>
 31a:	81 e4       	ldi	r24, 0x41	; 65
 31c:	0e 94 10 02 	call	0x420	; 0x420 <twi_rep_start>
 320:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <twi_readNak>
 324:	c8 2f       	mov	r28, r24
 326:	0e 94 02 02 	call	0x404	; 0x404 <twi_stop>
 32a:	8c 2f       	mov	r24, r28
 32c:	cf 91       	pop	r28
 32e:	08 95       	ret

Disassembly of section .text.flash:

00000270 <flash>:
 270:	cf 93       	push	r28
 272:	87 ec       	ldi	r24, 0xC7	; 199
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <flash+0x6>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <flash+0xc>
 27c:	00 00       	nop
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	0e 94 85 01 	call	0x30a	; 0x30a <PCA9555_0_read>
 284:	c8 2f       	mov	r28, r24
 286:	68 2f       	mov	r22, r24
 288:	68 60       	ori	r22, 0x08	; 8
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 290:	87 ec       	ldi	r24, 0xC7	; 199
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <flash+0x24>
 298:	00 c0       	rjmp	.+0      	; 0x29a <flash+0x2a>
 29a:	00 00       	nop
 29c:	6c 2f       	mov	r22, r28
 29e:	67 7f       	andi	r22, 0xF7	; 247
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 2a6:	cf 91       	pop	r28
 2a8:	08 95       	ret

Disassembly of section .text.write_2_nibbles:

000002aa <write_2_nibbles>:
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	c8 2f       	mov	r28, r24
 2b0:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2b4:	d6 2f       	mov	r29, r22
 2b6:	df 70       	andi	r29, 0x0F	; 15
 2b8:	68 2f       	mov	r22, r24
 2ba:	60 7f       	andi	r22, 0xF0	; 240
 2bc:	6d 2b       	or	r22, r29
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 2c4:	0e 94 38 01 	call	0x270	; 0x270 <flash>
 2c8:	80 e1       	ldi	r24, 0x10	; 16
 2ca:	c8 9f       	mul	r28, r24
 2cc:	b0 01       	movw	r22, r0
 2ce:	11 24       	eor	r1, r1
 2d0:	6d 2b       	or	r22, r29
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 2d8:	0e 94 38 01 	call	0x270	; 0x270 <flash>
 2dc:	df 91       	pop	r29
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

Disassembly of section .text.lcd_data:

00000330 <lcd_data>:
 330:	cf 93       	push	r28
 332:	c8 2f       	mov	r28, r24
 334:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 338:	64 60       	ori	r22, 0x04	; 4
 33a:	82 e0       	ldi	r24, 0x02	; 2
 33c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 340:	8c 2f       	mov	r24, r28
 342:	0e 94 55 01 	call	0x2aa	; 0x2aa <write_2_nibbles>
 346:	8f ec       	ldi	r24, 0xCF	; 207
 348:	97 e0       	ldi	r25, 0x07	; 7
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <lcd_data+0x1a>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <lcd_data+0x20>
 350:	00 00       	nop
 352:	cf 91       	pop	r28
 354:	08 95       	ret

Disassembly of section .text.lcd_command:

00000356 <lcd_command>:
 356:	cf 93       	push	r28
 358:	c8 2f       	mov	r28, r24
 35a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 35e:	6b 7f       	andi	r22, 0xFB	; 251
 360:	82 e0       	ldi	r24, 0x02	; 2
 362:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 366:	8c 2f       	mov	r24, r28
 368:	0e 94 55 01 	call	0x2aa	; 0x2aa <write_2_nibbles>
 36c:	8f ec       	ldi	r24, 0xCF	; 207
 36e:	97 e0       	ldi	r25, 0x07	; 7
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <lcd_command+0x1a>
 374:	00 c0       	rjmp	.+0      	; 0x376 <lcd_command+0x20>
 376:	00 00       	nop
 378:	cf 91       	pop	r28
 37a:	08 95       	ret

Disassembly of section .text.lcd_clear_display:

000003c0 <lcd_clear_display>:
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_command>
 3c6:	2f ef       	ldi	r18, 0xFF	; 255
 3c8:	83 ec       	ldi	r24, 0xC3	; 195
 3ca:	99 e0       	ldi	r25, 0x09	; 9
 3cc:	21 50       	subi	r18, 0x01	; 1
 3ce:	80 40       	sbci	r24, 0x00	; 0
 3d0:	90 40       	sbci	r25, 0x00	; 0
 3d2:	e1 f7       	brne	.-8      	; 0x3cc <lcd_clear_display+0xc>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <lcd_clear_display+0x16>
 3d6:	00 00       	nop
 3d8:	08 95       	ret

Disassembly of section .text.lcd_init:

0000012a <lcd_init>:
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	83 ec       	ldi	r24, 0xC3	; 195
 132:	99 e0       	ldi	r25, 0x09	; 9
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <lcd_init+0xa>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <lcd_init+0x14>
 13e:	00 00       	nop
 140:	c0 e0       	ldi	r28, 0x00	; 0
 142:	d0 e0       	ldi	r29, 0x00	; 0
 144:	0d c0       	rjmp	.+26     	; 0x160 <lcd_init+0x36>
 146:	60 e3       	ldi	r22, 0x30	; 48
 148:	82 e0       	ldi	r24, 0x02	; 2
 14a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 14e:	0e 94 38 01 	call	0x270	; 0x270 <flash>
 152:	87 ee       	ldi	r24, 0xE7	; 231
 154:	93 e0       	ldi	r25, 0x03	; 3
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <lcd_init+0x2c>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <lcd_init+0x32>
 15c:	00 00       	nop
 15e:	21 96       	adiw	r28, 0x01	; 1
 160:	c3 30       	cpi	r28, 0x03	; 3
 162:	d1 05       	cpc	r29, r1
 164:	84 f3       	brlt	.-32     	; 0x146 <lcd_init+0x1c>
 166:	60 e2       	ldi	r22, 0x20	; 32
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 16e:	0e 94 38 01 	call	0x270	; 0x270 <flash>
 172:	87 ee       	ldi	r24, 0xE7	; 231
 174:	93 e0       	ldi	r25, 0x03	; 3
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <lcd_init+0x4c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <lcd_init+0x52>
 17c:	00 00       	nop
 17e:	88 e2       	ldi	r24, 0x28	; 40
 180:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_command>
 184:	8c e0       	ldi	r24, 0x0C	; 12
 186:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_command>
 18a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_clear_display>
 18e:	86 e0       	ldi	r24, 0x06	; 6
 190:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_command>
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	08 95       	ret

Disassembly of section .text.lcd_string:

00000234 <lcd_string>:
 234:	cf 92       	push	r12
 236:	df 92       	push	r13
 238:	ef 92       	push	r14
 23a:	6b 01       	movw	r12, r22
 23c:	e8 2e       	mov	r14, r24
 23e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_clear_display>
 242:	0c c0       	rjmp	.+24     	; 0x25c <lcd_string+0x28>
 244:	8a 30       	cpi	r24, 0x0A	; 10
 246:	21 f4       	brne	.+8      	; 0x250 <lcd_string+0x1c>
 248:	80 ec       	ldi	r24, 0xC0	; 192
 24a:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_command>
 24e:	02 c0       	rjmp	.+4      	; 0x254 <lcd_string+0x20>
 250:	0e 94 98 01 	call	0x330	; 0x330 <lcd_data>
 254:	8f ef       	ldi	r24, 0xFF	; 255
 256:	c8 1a       	sub	r12, r24
 258:	d8 0a       	sbc	r13, r24
 25a:	e8 0a       	sbc	r14, r24
 25c:	f6 01       	movw	r30, r12
 25e:	84 91       	lpm	r24, Z
 260:	e7 fc       	sbrc	r14, 7
 262:	80 81       	ld	r24, Z
 264:	81 11       	cpse	r24, r1
 266:	ee cf       	rjmp	.-36     	; 0x244 <lcd_string+0x10>
 268:	ef 90       	pop	r14
 26a:	df 90       	pop	r13
 26c:	cf 90       	pop	r12
 26e:	08 95       	ret

Disassembly of section .text.main:

000003a0 <main>:
 3a0:	8f ef       	ldi	r24, 0xFF	; 255
 3a2:	84 b9       	out	0x04, r24	; 4
 3a4:	0e 94 0a 02 	call	0x414	; 0x414 <twi_init>
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	86 e0       	ldi	r24, 0x06	; 6
 3ac:	0e 94 71 01 	call	0x2e2	; 0x2e2 <PCA9555_0_write>
 3b0:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_init>
 3b4:	6e e0       	ldi	r22, 0x0E	; 14
 3b6:	71 e0       	ldi	r23, 0x01	; 1
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_string>
 3be:	ff cf       	rjmp	.-2      	; 0x3be <main+0x1e>

Disassembly of section .text.__dummy_fini:

0000042e <_fini>:
 42e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000430 <__funcs_on_exit>:
 430:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000432 <__simulator_exit>:
 432:	08 95       	ret

Disassembly of section .text.exit:

000003da <exit>:
 3da:	ec 01       	movw	r28, r24
 3dc:	0e 94 18 02 	call	0x430	; 0x430 <__funcs_on_exit>
 3e0:	0e 94 17 02 	call	0x42e	; 0x42e <_fini>
 3e4:	ce 01       	movw	r24, r28
 3e6:	0e 94 19 02 	call	0x432	; 0x432 <__simulator_exit>
 3ea:	ce 01       	movw	r24, r28
 3ec:	0e 94 15 02 	call	0x42a	; 0x42a <_Exit>

Disassembly of section .text._Exit:

0000042a <_Exit>:
 42a:	0e 94 85 00 	call	0x10a	; 0x10a <_exit>
