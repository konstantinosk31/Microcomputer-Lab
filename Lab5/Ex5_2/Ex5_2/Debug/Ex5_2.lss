
Ex5_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002fe  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000032d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  0000033b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f6c  00000000  00000000  000003ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009f4  00000000  00000000  00001317  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004cb  00000000  00000000  00001d0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  000021d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032b  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000022a  00000000  00000000  000025db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002805  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000027c  0000027c  000002f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002868  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.twi_init 0000000c  0000026a  0000026a  000002de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.twi_readNak 00000014  00000246  00000246  000002ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.twi_start 0000004c  00000176  00000176  000001ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.twi_start_wait 0000004e  00000128  00000128  0000019c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.twi_write 00000024  000001e8  000001e8  0000025c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.twi_rep_start 00000006  00000276  00000276  000002ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.twi_stop 00000010  0000025a  0000025a  000002ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.PCA9555_0_write 00000024  0000020c  0000020c  00000280  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.PCA9555_0_read 00000026  000001c2  000001c2  00000236  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.main    0000005c  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_fini 00000002  00000284  00000284  000002f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__dummy_funcs_on_exit 00000002  00000286  00000286  000002fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__dummy_simulator_exit 00000002  00000288  00000288  000002fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.exit    00000016  00000230  00000230  000002a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text._Exit   00000004  00000280  00000280  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
   8:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
   c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  10:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  14:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  18:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  1c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  20:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  24:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  28:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  2c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  30:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  34:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  38:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  3c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  40:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  44:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  48:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  4c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  50:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  54:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  58:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  5c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  60:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  64:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  68:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  6c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  70:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  74:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  78:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  7c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  80:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  84:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  88:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  8c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  90:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  94:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  98:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  9c:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  a0:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  a4:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  a8:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  ac:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>
  b0:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <_etext>
  c4:	0c 94 18 01 	jmp	0x230	; 0x230 <exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>

Disassembly of section .text:

0000027c <__bad_interrupt>:
 27c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.twi_init:

0000026a <twi_init>:
#define TW_STATUS (TWSR0 & TW_STATUS_MASK)

//initialize TWI clock
void twi_init(void)
{
	TWSR0 = 0; // PRESCALER_VALUE=1
 26a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = TWBR0_VALUE; // SCL_CLOCK 100KHz
 26e:	88 e4       	ldi	r24, 0x48	; 72
 270:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 274:	08 95       	ret

Disassembly of section .text.twi_readNak:

00000246 <twi_readNak>:
}

//Read one byte from the twi device, read is followed by a stop condition
unsigned char twi_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 246:	84 e8       	ldi	r24, 0x84	; 132
 248:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR0 & (1<<TWINT)));
 24c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 250:	88 23       	and	r24, r24
 252:	e4 f7       	brge	.-8      	; 0x24c <twi_readNak+0x6>
	return TWDR0;
 254:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 258:	08 95       	ret

Disassembly of section .text.twi_start:

00000176 <twi_start>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 176:	94 ea       	ldi	r25, 0xA4	; 164
 178:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 180:	99 23       	and	r25, r25
 182:	e4 f7       	brge	.-8      	; 0x17c <twi_start+0x6>
 184:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 188:	98 7f       	andi	r25, 0xF8	; 248
 18a:	98 30       	cpi	r25, 0x08	; 8
 18c:	11 f0       	breq	.+4      	; 0x192 <twi_start+0x1c>
 18e:	90 31       	cpi	r25, 0x10	; 16
 190:	91 f4       	brne	.+36     	; 0x1b6 <twi_start+0x40>
 192:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <twi_start+0x26>
 1a4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1a8:	88 7f       	andi	r24, 0xF8	; 248
 1aa:	88 31       	cpi	r24, 0x18	; 24
 1ac:	31 f0       	breq	.+12     	; 0x1ba <twi_start+0x44>
 1ae:	80 34       	cpi	r24, 0x40	; 64
 1b0:	31 f4       	brne	.+12     	; 0x1be <twi_start+0x48>
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	08 95       	ret
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	08 95       	ret
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	08 95       	ret
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	08 95       	ret

Disassembly of section .text.twi_start_wait:

00000128 <twi_start_wait>:
 128:	94 ea       	ldi	r25, 0xA4	; 164
 12a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	99 23       	and	r25, r25
 134:	e4 f7       	brge	.-8      	; 0x12e <twi_start_wait+0x6>
 136:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 13a:	98 7f       	andi	r25, 0xF8	; 248
 13c:	98 30       	cpi	r25, 0x08	; 8
 13e:	11 f0       	breq	.+4      	; 0x144 <twi_start_wait+0x1c>
 140:	90 31       	cpi	r25, 0x10	; 16
 142:	91 f7       	brne	.-28     	; 0x128 <twi_start_wait>
 144:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 148:	94 e8       	ldi	r25, 0x84	; 132
 14a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 152:	99 23       	and	r25, r25
 154:	e4 f7       	brge	.-8      	; 0x14e <twi_start_wait+0x26>
 156:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 15a:	98 7f       	andi	r25, 0xF8	; 248
 15c:	90 32       	cpi	r25, 0x20	; 32
 15e:	11 f0       	breq	.+4      	; 0x164 <twi_start_wait+0x3c>
 160:	98 35       	cpi	r25, 0x58	; 88
 162:	41 f4       	brne	.+16     	; 0x174 <twi_start_wait+0x4c>
 164:	94 e9       	ldi	r25, 0x94	; 148
 166:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16e:	94 fd       	sbrc	r25, 4
 170:	fc cf       	rjmp	.-8      	; 0x16a <twi_start_wait+0x42>
 172:	da cf       	rjmp	.-76     	; 0x128 <twi_start_wait>
 174:	08 95       	ret

Disassembly of section .text.twi_write:

000001e8 <twi_write>:
 1e8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1ec:	84 e8       	ldi	r24, 0x84	; 132
 1ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f6:	88 23       	and	r24, r24
 1f8:	e4 f7       	brge	.-8      	; 0x1f2 <twi_write+0xa>
 1fa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1fe:	88 7f       	andi	r24, 0xF8	; 248
 200:	88 32       	cpi	r24, 0x28	; 40
 202:	11 f0       	breq	.+4      	; 0x208 <twi_write+0x20>
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	08 95       	ret
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	08 95       	ret

Disassembly of section .text.twi_rep_start:

00000276 <twi_rep_start>:
// Send repeated start condition, address, transfer direction
//Return: 0 device accessible
// 1 failed to access device
unsigned char twi_rep_start(unsigned char address)
{
	return twi_start( address );
 276:	0e 94 bb 00 	call	0x176	; 0x176 <twi_start>
}
 27a:	08 95       	ret

Disassembly of section .text.twi_stop:

0000025a <twi_stop>:

// Terminates the data transfer and releases the twi bus
void twi_stop(void)
{
	// send stop condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 25a:	84 e9       	ldi	r24, 0x94	; 148
 25c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
 260:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 264:	84 fd       	sbrc	r24, 4
 266:	fc cf       	rjmp	.-8      	; 0x260 <twi_stop+0x6>
}
 268:	08 95       	ret

Disassembly of section .text.PCA9555_0_write:

0000020c <PCA9555_0_write>:
unsigned char twi_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));
	return TWDR0;
}
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	d8 2f       	mov	r29, r24
 212:	c6 2f       	mov	r28, r22
 214:	80 e4       	ldi	r24, 0x40	; 64
 216:	0e 94 94 00 	call	0x128	; 0x128 <twi_start_wait>
 21a:	8d 2f       	mov	r24, r29
 21c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <twi_write>
 220:	8c 2f       	mov	r24, r28
 222:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <twi_write>
 226:	0e 94 2d 01 	call	0x25a	; 0x25a <twi_stop>
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

Disassembly of section .text.PCA9555_0_read:

000001c2 <PCA9555_0_read>:
 1c2:	cf 93       	push	r28
 1c4:	c8 2f       	mov	r28, r24
 1c6:	80 e4       	ldi	r24, 0x40	; 64
 1c8:	0e 94 94 00 	call	0x128	; 0x128 <twi_start_wait>
 1cc:	8c 2f       	mov	r24, r28
 1ce:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <twi_write>
 1d2:	81 e4       	ldi	r24, 0x41	; 65
 1d4:	0e 94 3b 01 	call	0x276	; 0x276 <twi_rep_start>
 1d8:	0e 94 23 01 	call	0x246	; 0x246 <twi_readNak>
 1dc:	c8 2f       	mov	r28, r24
 1de:	0e 94 2d 01 	call	0x25a	; 0x25a <twi_stop>
 1e2:	8c 2f       	mov	r24, r28
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

Disassembly of section .text.main:

000000cc <main>:
  cc:	0e 94 35 01 	call	0x26a	; 0x26a <twi_init>
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	86 e0       	ldi	r24, 0x06	; 6
  d4:	0e 94 06 01 	call	0x20c	; 0x20c <PCA9555_0_write>
  d8:	60 ef       	ldi	r22, 0xF0	; 240
  da:	87 e0       	ldi	r24, 0x07	; 7
  dc:	0e 94 06 01 	call	0x20c	; 0x20c <PCA9555_0_write>
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 06 01 	call	0x20c	; 0x20c <PCA9555_0_write>
  e8:	6e e0       	ldi	r22, 0x0E	; 14
  ea:	83 e0       	ldi	r24, 0x03	; 3
  ec:	0e 94 06 01 	call	0x20c	; 0x20c <PCA9555_0_write>
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <PCA9555_0_read>
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	80 95       	com	r24
  fa:	90 95       	com	r25
  fc:	92 95       	swap	r25
  fe:	82 95       	swap	r24
 100:	8f 70       	andi	r24, 0x0F	; 15
 102:	89 27       	eor	r24, r25
 104:	9f 70       	andi	r25, 0x0F	; 15
 106:	89 27       	eor	r24, r25
 108:	61 e0       	ldi	r22, 0x01	; 1
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	09 f4       	brne	.+2      	; 0x110 <main+0x44>
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	04 c0       	rjmp	.+8      	; 0x11c <main+0x50>
 114:	66 0f       	add	r22, r22
 116:	77 1f       	adc	r23, r23
 118:	96 95       	lsr	r25
 11a:	87 95       	ror	r24
 11c:	80 ff       	sbrs	r24, 0
 11e:	fa cf       	rjmp	.-12     	; 0x114 <main+0x48>
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	0e 94 06 01 	call	0x20c	; 0x20c <PCA9555_0_write>
 126:	e4 cf       	rjmp	.-56     	; 0xf0 <main+0x24>

Disassembly of section .text.__dummy_fini:

00000284 <_fini>:
 284:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000286 <__funcs_on_exit>:
 286:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000288 <__simulator_exit>:
 288:	08 95       	ret

Disassembly of section .text.exit:

00000230 <exit>:
 230:	ec 01       	movw	r28, r24
 232:	0e 94 43 01 	call	0x286	; 0x286 <__funcs_on_exit>
 236:	0e 94 42 01 	call	0x284	; 0x284 <_fini>
 23a:	ce 01       	movw	r24, r28
 23c:	0e 94 44 01 	call	0x288	; 0x288 <__simulator_exit>
 240:	ce 01       	movw	r24, r28
 242:	0e 94 40 01 	call	0x280	; 0x280 <_Exit>

Disassembly of section .text._Exit:

00000280 <_Exit>:
 280:	0e 94 64 00 	call	0xc8	; 0xc8 <_exit>
